package com.soprahr.Services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.soprahr.Repository.ReservationRepository;
import com.soprahr.models.Reservation;
import com.soprahr.models.Salle;

import net.minidev.json.JSONObject;

@Service
public class ReservationServices {

	@Autowired
	public ReservationRepository repository;
	
	/*********************************** AJOUTER UNE Reservation ***************************************/
	public JSONObject addReservation(Reservation reservation) {
		JSONObject jo = new JSONObject();
		jo.put("Reservation",repository.save(reservation));
		return jo;
	}
	
	/*********************************** LISTE RESERVATIONS ***************************************/
	public JSONObject getAllSalles() {
		JSONObject jo = new JSONObject();
		if ( repositoryS.findAll().size() != 0 ) {
			jo.put("Salles" , repositoryS.findAll());
			return jo;
		}else {
			jo.put("Error" , "La liste des salles est vide");
			return jo;
		}
	}
	
	/*********************************** SUPPRIMER UNE SALLE ***************************************/
	public JSONObject deleteSalle(int id) {
		JSONObject jo = new JSONObject();
		if(repositoryS.findById(id).isPresent()) {
			repositoryS.delete(repositoryS.findById(id).get());
			jo.put("Success", "Salle supprim√©");
			return jo;
		}else {
			jo.put("Error" , "Salle n'existe pas !");
			return jo;
		}
	}
	
	/*********************************** RECHERCHER UNE SALLE PAR ID ***************************************/
	public JSONObject getSalleById(int id) {
		JSONObject jo = new JSONObject();
		if(repositoryS.findById(id).isPresent()) {
			jo.put("Salle", repositoryS.findById(id).get());
			return jo;
		}else {
			jo.put("Error" , "Salle n'existe pas !");
			return jo;
		}
	}
}
